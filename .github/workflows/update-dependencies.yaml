name: Update Dependencies

on:
  schedule:
    - cron: "0 2 * * 1" # Every Monday at 2 AM UTC
  workflow_dispatch: # Trigger manually from GitHub UI

jobs:
  update-deps:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permission to push to the repository
      pull-requests: write # Permission to create pull requests

    steps:
      # Step 1: Checkout the develop branch (or the branch you want to update dependencies on)
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop # Change this to your target branch (main, master, etc.)

      # Step 2: Set up Node.js for Backend (with pnpm cache)
      - name: Set up Node.js for Backend
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Specify Node.js version for the backend
          cache: "pnpm" # Enable caching for pnpm
        working-directory: ./backend # Specify backend directory

      # Step 3: Install pnpm in the Backend
      - name: Install pnpm in Backend
        run: npm install -g pnpm
        working-directory: ./backend # Specify backend directory

      # Step 4: Install Backend Dependencies (using pnpm-lock.yaml in backend)
      - name: Install Backend Dependencies
        run: pnpm install
        working-directory: ./backend # Specify backend directory

      # Step 5: Fix Backend Vulnerabilities
      - name: Fix Backend Vulnerabilities
        run: pnpm audit fix || true # Automatically fix vulnerabilities (if any)
        working-directory: ./backend # Specify backend directory

      # Step 6: Set up Node.js for Frontend (with pnpm cache)
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Specify Node.js version for the frontend
          cache: "pnpm" # Enable caching for pnpm
        working-directory: ./frontend # Specify frontend directory

      # Step 7: Install pnpm in the Frontend
      - name: Install pnpm in Frontend
        run: npm install -g pnpm
        working-directory: ./frontend # Specify frontend directory

      # Step 8: Install Frontend Dependencies (using pnpm-lock.yaml in frontend)
      - name: Install Frontend Dependencies
        run: pnpm install
        working-directory: ./frontend # Specify frontend directory

      # Step 9: Fix Frontend Vulnerabilities
      - name: Fix Frontend Vulnerabilities
        run: pnpm audit fix || true # Automatically fix vulnerabilities (if any)
        working-directory: ./frontend # Specify frontend directory

      # Step 10: Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update frontend/backend dependencies"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: chore/update-deps-main
          base: main
          delete-branch: true
          title: "chore: Update Dependencies"
          body: |
            Automated dependency update for:
            - backend/
            - frontend/

            Using **pnpm** and `pnpm audit fix`.
